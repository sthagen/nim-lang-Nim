funWithGenerics	subdir/subdir_b/utils.html#funWithGenerics,T,U	utils: funWithGenerics[T, U: SomeFloat](a: T; b: U)	
enumValueA	subdir/subdir_b/utils.html#enumValueA	SomeType.enumValueA	
enumValueB	subdir/subdir_b/utils.html#enumValueB	SomeType.enumValueB	
enumValueC	subdir/subdir_b/utils.html#enumValueC	SomeType.enumValueC	
SomeType	subdir/subdir_b/utils.html#SomeType	utils: SomeType	
G	subdir/subdir_b/utils.html#G	utils: G	
someType	subdir/subdir_b/utils.html#someType_2	utils: someType(): SomeType	
fn2	subdir/subdir_b/utils.html#fn2	utils: fn2()	
fn2	subdir/subdir_b/utils.html#fn2,int	utils: fn2(x: int)	
fn2	subdir/subdir_b/utils.html#fn2,int,float	utils: fn2(x: int; y: float)	
binarySearch	subdir/subdir_b/utils.html#binarySearch,openArray[T],K,proc(T,K)	utils: binarySearch[T, K](a: openArray[T]; key: K;\n                   cmp: proc (x: T; y: K): int {.closure.}): int	
fn3	subdir/subdir_b/utils.html#fn3	utils: fn3(): auto	
fn4	subdir/subdir_b/utils.html#fn4	utils: fn4(): auto	
fn5	subdir/subdir_b/utils.html#fn5	utils: fn5()	
fn6	subdir/subdir_b/utils.html#fn6	utils: fn6()	
fn7	subdir/subdir_b/utils.html#fn7	utils: fn7()	
fn8	subdir/subdir_b/utils.html#fn8	utils: fn8(): auto	
fn9	subdir/subdir_b/utils.html#fn9,int	utils: fn9(a: int): int	
fn10	subdir/subdir_b/utils.html#fn10,int	utils: fn10(a: int): int	
fN11	subdir/subdir_b/utils.html#fN11	utils: fN11()	
fN11	subdir/subdir_b/utils.html#fN11,int	utils: fN11(x: int)	
aEnum	subdir/subdir_b/utils.html#aEnum.t	utils: aEnum(): untyped	
bEnum	subdir/subdir_b/utils.html#bEnum.t	utils: bEnum(): untyped	
fromUtilsGen	subdir/subdir_b/utils.html#fromUtilsGen.t	utils: fromUtilsGen(): untyped	
f	subdir/subdir_b/utils.html#f,G[int]	utils: f(x: G[int])	
f	subdir/subdir_b/utils.html#f,G[string]	utils: f(x: G[string])	
`[]`	subdir/subdir_b/utils.html#[],G[T]	utils: `[]`[T](x: G[T]): T	
`[]=`	subdir/subdir_b/utils.html#[]=,G[T],int,T	utils: `[]=`[T](a: var G[T]; index: int; value: T)	
`$`	subdir/subdir_b/utils.html#$,G[T]	utils: `$`[T](a: G[T]): string	
`$`	subdir/subdir_b/utils.html#$,ref.SomeType	utils: `$`[T](a: ref SomeType): string	
fooBar	subdir/subdir_b/utils.html#fooBar.i,seq[SomeType]	utils: fooBar(a: seq[SomeType]): int	
fn	subdir/subdir_b/utils.html#fn	utils: fn[T; U, V: SomeFloat]()	
`'big`	subdir/subdir_b/utils.html#'big,string	utils: `&apos;big`(a: string): SomeType	
This is now a header	subdir/subdir_b/utils.html#this-is-now-a-header	 This is now a header	
Next header	subdir/subdir_b/utils.html#this-is-now-a-header-next-header	  Next header	
And so on	subdir/subdir_b/utils.html#next-header-and-so-on	   And so on	
More headers	subdir/subdir_b/utils.html#more-headers	 More headers	
Up to level 6	subdir/subdir_b/utils.html#more-headers-up-to-level-6	      Up to level 6	
Pandoc Markdown	subdir/subdir_b/utils.html#pandoc-markdown	 Pandoc Markdown	
Link name syntax	subdir/subdir_b/utils.html#pandoc-markdown-link-name-syntax	  Link name syntax	
Symbols documentation	subdir/subdir_b/utils.html#pandoc-markdown-symbols-documentation	  Symbols documentation	
